import sys

N = int(sys.stdin.readline())
dp = [[0] * 10 for _ in range(N+1)]

# 한 자리 수일 경우, 0을 제외한 나머지는 모두 계단수가 될 수 있으므로 값을 저장.
dp[1] = [0, 1, 1, 1, 1, 1, 1, 1, 1, 1]

# dp[i][j] 에서, i는 현재 자리수를 의미하며 j는 가장 앞에 위치한 숫자를 의미한다.
for i in range(2, N+1):
    # 가장 앞에 위치한 숫자가 0이라면, 그 전 숫자는 맨 앞이 1인 수밖에 올 수가 없다.
    dp[i][0] = dp[i-1][1]
    # 가장 앞에 위치한 숫자가 9라면, 그 전 숫자는 맨 앞이 8인 수밖에 올 수가 없다.
    dp[i][9] = dp[i-1][8]
    for j in range(1, 9):
        dp[i][j] = dp[i - 1][j - 1] + dp[i-1][j + 1]
print(sum(dp[N]) % 1000000000)